{"version":3,"sources":["logo.svg","fileInfo/fileInfoServices.js","fileInfo/fileInfo.js","Container/container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FileInfoService","getInfo","params","fetch","then","response","json","File","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","file","_this2","fileInfoServices","props","id","data","setState","blueprint","console","log","react_default","a","createElement","Card","style","minWidth","textAlign","name","CardContent","updated","IosCheckmarkCircle_default","fontSize","color","beat","IosCloseCircle_default","Typography","variant","component","commentary","Date","creation_time","toLocaleDateString","CircularProgress","margin","width","height","Component","Child","_ref","match","Fragment","CssBaseline","Container","maxWidth","padding","fileInfo","ContainerApp","react_router_dom","react_router","path","App","className","container","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uSCWvBC,EAXO,CAEpBC,QAAS,SAACC,GAEN,OAAOC,MAAM,4DAA6DD,GAC7DE,KAAK,SAASC,GACX,OAAOA,EAASC,WCmDzBC,cA9CX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACTC,KAAM,IAHAR,mFAOK,IAAAS,EAAAN,KACfO,EAAiBjB,QAAQU,KAAKQ,MAAMC,IAAIhB,KAAM,SAAAiB,GAC1CJ,EAAKK,SAAS,CAACN,KAAMK,EAAKE,YAC1BC,QAAQC,IAAIR,EAAKF,0CAKrB,OACIW,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,SAAU,IAAKC,UAAW,WAClCrB,KAAKI,MAAMC,KAAKiB,KACdP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACCvB,KAAKI,MAAMC,KAAKmB,QAAUT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAiBU,SAAS,MAAMC,MAAM,QAAQC,MAAM,IAAWb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CAAaU,SAAS,MAAMC,MAAM,QAC5HZ,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAC9BhC,KAAKI,MAAMC,KAAKiB,MAErBP,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAYH,MAAM,iBAAlB,cAGAZ,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KACjChC,KAAKI,MAAMC,KAAK4B,YAErBlB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAYH,MAAM,iBAAlB,eAGAZ,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAYE,UAAU,KACjB,IAAIE,KAAKlC,KAAKI,MAAMC,KAAK8B,eAAeC,uBAIjDrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAkBlB,MAAO,CAACmB,OAAQ,MAAOC,MAAO,QAASC,OAAQ,SAAUb,MAAM,sBAvC5Ec,aCUrB,SAASC,EAATC,GAA0B,IAATC,EAASD,EAATC,MACf,OACE7B,EAAAC,EAAAC,cAACF,EAAAC,EAAM6B,SAAP,KACE9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,MACA/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAWC,SAAS,KAAK7B,MAAO,CAAC8B,QAAS,SACxClC,EAAAC,EAAAC,cAACiC,EAAD,CAAMzC,GAAImC,EAAMrD,OAAOkB,OAMhB0C,uLArBT,OACApC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACErC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAOC,KAAK,OAAOtB,UAAWU,aANbD,aCOZc,MARf,WACE,OACExC,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,OACdzC,EAAAC,EAAAC,cAACwC,EAAD,QCIeC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2DCZNkB,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5E,KAAK,SAAA6E,GACjCA,EAAaC","file":"static/js/main.f43aba71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const FileInfoService = {\r\n  \r\n    getInfo: (params) =>{\r\n\r\n        return fetch('https://planos.azurewebsites.net/index.php/api/blueprint/'+ params)\r\n                    .then(function(response) {\r\n                        return response.json();\r\n                })\r\n    }\r\n};\r\n  \r\n  export default FileInfoService","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckmarkCircle from 'react-ionicons/lib/IosCheckmarkCircle'\r\nimport CloseCircle from 'react-ionicons/lib/IosCloseCircle'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport fileInfoServices from './fileInfoServices'\r\n  \r\n  class File extends Component {\r\n      \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            file: {}\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        fileInfoServices.getInfo(this.props.id).then( data => { \r\n            this.setState({file: data.blueprint})\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Card style={{minWidth: 275, textAlign: 'center'}}>\r\n                { this.state.file.name ?\r\n                    <CardContent>\r\n                    {this.state.file.updated ? <CheckmarkCircle fontSize=\"40%\" color=\"green\" beat={true} /> : <CloseCircle fontSize=\"40%\" color=\"red\" />}\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        {this.state.file.name}\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">\r\n                        Comentario\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                        {this.state.file.commentary}\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">\r\n                        Creaci√≥n\r\n                    </Typography>\r\n                    <Typography component=\"p\">\r\n                        {new Date(this.state.file.creation_time).toLocaleDateString()}\r\n                    </Typography>\r\n                </CardContent>\r\n                :\r\n                <CircularProgress style={{margin: '8px', width: '100px', height: '100px'}} color=\"secondary\"/>\r\n                }\r\n                \r\n            </Card>\r\n        )\r\n    }\r\n    \r\n} \r\n\r\nexport default File;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport File from '../fileInfo/fileInfo'\r\n\r\nclass ContainerApp extends Component{\r\n  \r\n  render(){\r\n      return (\r\n      <Router>\r\n        <div>\r\n          <Route path=\"/:id\" component={Child} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Child({ match }) {\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\" style={{padding: '25px'}}>\r\n        <File id={match.params.id}></File>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ContainerApp;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Container from './Container/container'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Container />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}